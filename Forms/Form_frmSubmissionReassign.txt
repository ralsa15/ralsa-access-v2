Option Explicit
Option Compare Database
Const Row1Top = 1728
Const Row2Top = 2520
Const Row3Top = 3312 'tbVtNote Max Row + 543; tabActivity.Height; Detail.Height = '(.2188 + .259)' .4778 + tabActivity.Height
Const NewRow = 792
Const HeaderHgt = 360
Const Col1Lft = 720
Const Col2Lft = 3384
Const Col3Lft = 6048

Dim SendToVT As Boolean
Public ObjectID As Long, ObjectText As String

Private Sub cbAction_AfterUpdate()
    Dim ctrl As Control
    
    With Me!Jobs_Page.Controls

    For Each ctrl In Me!Jobs_Page.Controls
        'Adding these phrases to Tags will automatically apply these attributes to the controls
        ' and will require them to be reversed conditionally as below
        Debug.Print ctrl.Name & ": " & ctrl.ControlType & " | " & ctrl.Tag
        
        If ctrl.Tag Like "*NoLock*" Then 'And ctrl.ControlType = 111 Then 'ControlType 111 is ComboBox
            ctrl.Locked = False
         End If
        If ctrl.Tag Like "*Enable*" Then
            ctrl.Enabled = False
         End If
        If ctrl.Tag Like "*Visible*" Then
            ctrl.Visible = False
         End If
        If ctrl.Tag Like "*Test*" Then
            If ctrl.Value <> ctrl.OldValue Then
                ctrl.Value = ctrl.OldValue
             End If
         End If
        If ctrl.Tag Like "*Req*" Then
            ctrl.BorderColor = 0
            ctrl.BackColor = 16777215
         End If
     Next
    End With
    
    SendToVT = False
    
    With Me
    
    .cbActReason.Value = ""
    .cbExtReason.Value = ""
    
    .cbJobReviewer.Value = ""
    
    .cbStatus.Value = .fkFormStatus
    .chkFloodJobs.Value = False
    
    Select Case .cbAction
        Case 6 'Reassign
            SendToVT = True
            ResizeForm 2
            .Label_Assigned_To.Visible = True
            .cbAssignedTo.Visible = True
            .cbAssignedTo.Locked = False
            .cbAssignedTo.Enabled = True
            .cbActReason.Visible = True
            .chkFloodJobs.Value = False
            .chkFloodJobs.Visible = True
            .chkFloodJobs.Locked = False
            .cbAction.Locked = True
            .cbAction.Enabled = False
            .cbJobReviewer.RowSource = .cbAssignedTo.RowSource
        
        Case Else
     End Select

    .cbActReason.RowSource = "SELECT tblActionNotes.* FROM tblActionNotes WHERE ((tblActionNotes.txtSubOrder)>0 AND txtRelevantAction Like '*;" & .cbAction & _
                ";*') ORDER BY tblActionNotes.txtSubOrder; "

    End With
    Summarize
End Sub

Private Sub cbActReason_AfterUpdate()
    
    Dim Action As Long
    Action = Me.cbAction
    Me.tbSubNotes.Tag = Replace(Me.tbSubNotes.Tag, "Required", "")
    'Me.chkIncludeInVT.Enabled = True
    
    With Me.cbExtReason
    Select Case cbActReason
        Case 2, 3, 9, 10, 28, 29
            ResizeForm 3
            Me.Label_ExtendReason.Visible = True
            .Visible = True
            .Locked = False
            .RowSource = "SELECT ID, txtExtendedNote FROM tblActionNotesExt WHERE fkActionNote = " & cbActReason & " ;"
            .DefaultValue = [cbExtReason].ItemData(0)
        Case 7
            ResizeForm 3
            Me.Label_ExtendReason.Visible = True
            .Visible = True
            .RowSource = "SELECT ID, txtExtendedNote FROM tblActionNotesExt WHERE fkActionNote = " & cbActReason & " ;"
            Select Case Me.tbForm
                Case "F1"
                    .DefaultValue = [cbExtReason].ItemData(1)
                Case "F2"
                    .DefaultValue = [cbExtReason].ItemData(0)
                Case Else
             End Select
        Case 30
            Me.chkIncludeNotesVT.Value = True
            Me.chkIncludeNotesVT.Enabled = False
            Me.tbSubNotes.Tag = Me.tbSubNotes.Tag & "Required"
        Case Else
            ResizeForm 2
            .RowSource = ""
            .Value = ""
            Me.Label_ExtendReason.Visible = False
            .Visible = False
     End Select

    Summarize
    End With
End Sub

Private Sub cbAssignedTo_AfterUpdate()
    Summarize
    ChangeTrack Me.cbAssignedTo
End Sub

Private Sub cbExtReason_AfterUpdate()
    Summarize
End Sub

Private Sub cbJobReviewer_AfterUpdate()
    Summarize
    ChangeTrack Me.cbJobReviewer
End Sub

Private Sub chkFloodJobs_AfterUpdate()
    If Me.chkFloodJobs = True Then
        Me.cbJobReviewer.Enabled = True
        Me.cbJobReviewer.Value = Me.cbAssignedTo.Value
     Else
        Me.cbJobReviewer.Value = Null
        Me.cbJobReviewer.Enabled = False
     End If
    Summarize
    ChangeTrack Me.cbJobReviewer
End Sub

Private Sub chkIncludeNotesVT_Click()
    Summarize
    If SendToVT = False And Me.chkIncludeNotesVT Then SendToVT = True
End Sub

Private Sub cmdCancel_Click()
    Form_Close
End Sub

Private Sub cmdSaveClose_Click()

    'SubmissionActivity & Intention to rewrite as generic Sub so New Submissions can also call the Sub
    Dim Valid As Boolean, SubID As Long
    SubID = Me.anSubmissionID
    Dim strTypeErrors As String
    strTypeErrors = SubActivityValidation(Me)
    Valid = ActivityValidate(Me, strTypeErrors)    'modActivityForm
    If Valid Then
        'SubmissionActivity Me, SendToVT, Me.chkFloodJobs.Value 'NewfrmFunctions
        RecActivity Me, SendToVT, Me.chkFloodJobs.Value
        SaveAndCloseForm Me 'NewfrmFunctions
        UpdateListTextFields 1, SubID
     End If

End Sub

Function LogActivity(LogName As String, ParentID As String, Activity As String, ActivityID As String, ActReason As String, DateStamp As Date, UserID As Long) As Boolean
    Dim rstLogAdd As String
    
    rstLogAdd = "INSERT INTO " & LogName & " ( txtParentID, txtActivity, txtActivityID, txtReason, dtActivityStamp, fkUserID ) " & _
                "SELECT '" & ParentID & "', '" & Activity & "', '" & ActivityID & "', '" & ActReason & "', '" & DateStamp & "', " & UserID & "; "

    Debug.Print rstLogAdd
    BeginTrans
    CurrentDb.Execute rstLogAdd, dbFailOnError
    CommitTrans

End Function

Function LogDetails(LogName As String, ActivityID As String, FieldName As String, NewValue As String) As Boolean
    Dim rstLogAdd As String
    
    rstLogAdd = "INSERT INTO " & LogName & " ( fkActivityID, txtFieldName, txtNewValue ) " & _
                "SELECT '" & ActivityID & "', '" & FieldName & "', '" & NewValue & "' ; "
    
    Debug.Print rstLogAdd
    
    BeginTrans
    CurrentDb.Execute rstLogAdd, dbFailOnError
    CommitTrans
End Function

Private Function ResizeForm(MyRows As Long)
    'tbVtNote Max Row + 543 (TWPS)
    'tabActivity.Height tbVtNote.Top + 1 - .2188 + .1312
    'Detail.Height = '(.2188 + .259)' .4778 + tabActivity.Height
    Dim Movement As Long
    Select Case MyRows
        Case 1
            Movement = Row2Top
        Case 2
            Movement = Row3Top
        Case 3
            Movement = Row3Top + NewRow
     End Select
     
    With Me
        .chkFloodJobs.Top = (Movement - 792)
        .Label_FloodJobs.Top = (Movement - 936)
        .tbVtNote.Top = (Movement - 279)
        '.Jobs_Page.Height = .tbNotesVT.Top + 2460 '4495
        .tabActivity.Height = .tbVtNote.Top + 1314
        .Detail.Height = .tabActivity.Height + 373
        .InsideHeight = .Detail.Height + .FormHeader.Height + 320 '6510
    End With
End Function

Private Sub Form_Close()
    CancelAndCloseForm Me
    OldStatus = 0
    OldLabeler = 0
    OldReviewer = 0
    ObjectID = 0
    ObjectText = ""
End Sub

Private Sub Form_Load()
    ResizeForm 1
    Dim args
    args = Split(Me.OpenArgs, "|")

    Select Case args(0)
        Case 0
        Case Else
            Me.cbAction.RowSource = "SELECT tblActions.ID, tblActions.txtAction, tblActions.txtDescriptionForm FROM tblActions WHERE tblActions.ID = " & args(0) & ";"
            Me.cbAction.Locked = True
            'Me.cbAction.Enabled = False
     End Select
    OldStatus = Me.cbStatus
    OldLabeler = Me.cbAssignedTo
    OldReviewer = 0 'Me.cbDivReviewer
    Me.Label_Assigned_To.Caption = Me.cbAssignedTo.Column(1) & " | TO"
    
'    '** Temp
'    Me.cbAction.Value = 6
    '**
    cbAction_AfterUpdate
    ObjectID = Me.anSubmissionID
    ObjectText = Me.stSubmissionEntry
    BeginChangeTrack Me, 1
    
End Sub

Private Sub tbSubNotes_AfterUpdate()
    If Me.tbSubNotes = "" Or IsNull(Me.tbSubNotes) Then
        Me.chkIncludeNotesVT.Enabled = False
        Me.chkIncludeNotesVT = Null
     End If
    Summarize
End Sub

Private Sub tbSubNotes_Change()
    Me.chkIncludeNotesVT.Enabled = True
End Sub

Private Function Summarize()
    Dim bFormRa As Boolean, bArtRa As Boolean
    Dim SummaryTest As String
    
    With Me
    
        bFormRa = .cbAssignedTo.Value <> .cbAssignedTo.OldValue
        
        If Not IsNull(.cbJobReviewer) And .cbJobReviewer <> "" Then
            bArtRa = .cbJobReviewer.Value <> .cbAssignedTo.Value
         Else
            bArtRa = False
         End If
        
        If bFormRa And bArtRa Then
            SummaryTest = "RA Form Review assigned to " & .cbAssignedTo.Column(1) & _
                ", Art Review assigned to " & .cbJobReviewer.Column(1)
         ElseIf bFormRa And Me.chkFloodJobs Then
            SummaryTest = "RA Form & Art Review assigned to " & .cbAssignedTo.Column(1)
         ElseIf bFormRa Then
            SummaryTest = .cbAction.Column(2) & " " & .cbAssignedTo.Column(1)
         ElseIf bArtRa Then
            SummaryTest = "Art Review assigned to " & .cbJobReviewer.Column(1)
         End If

    If Right(SummaryTest, 2) = ": " Then SummaryTest = Left(SummaryTest, Len(SummaryTest) - 2)
    
    If .tbSubNotes <> "" Then
        .chkIncludeNotesVT.Enabled = True
     End If

    If .chkIncludeNotesVT Then
        Select Case .cbAction
            Case 2, 8
                If Not IsNull(.tbSubNotes) Then
                    SummaryTest = .tbSubNotes
                 End If
            Case 1, 3, 4, 5, 6
                SummaryTest = SummaryTest & "; " & .tbSubNotes
         End Select
     End If
    If Right(SummaryTest, 2) = "; " Then SummaryTest = Left(SummaryTest, Len(SummaryTest) - 2)
    If Left(SummaryTest, 2) = "; " Then SummaryTest = Right(SummaryTest, Len(SummaryTest) - 2)
    
    .tbVtNote = SummaryTest
    If SummaryTest = "" Then
        .cmdSaveClose.Enabled = False
     Else
        .cmdSaveClose.Enabled = True
     End If
    End With

End Function
